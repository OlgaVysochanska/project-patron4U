{"version":3,"file":"static/js/202.5d9d5dfc.chunk.js","mappings":"gOACA,EAAqB,qBAArB,EAAoD,0BAApD,EAAsF,wBAAtF,EAAoH,sBAApH,EAAmJ,yBAAnJ,EAAsL,0B,+YC0GtL,EA3FqB,WACnB,OAAsCA,EAAAA,EAAAA,UAASC,OAAOC,YAAtD,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,SAASC,IACPF,EAAeH,OAAOC,WACvB,CAED,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,WACLL,OAAOO,oBAAoB,SAAUF,EACtC,CACF,GAAE,IA4DH,OACE,iCACE,gBACEG,UAAWC,EACXC,IA7DAR,EAAc,IACTS,EACET,GAAe,KAAOA,EAAc,KACtCU,EAEAC,EAyDLC,IAAI,cACJC,QAAQ,UAEV,iBAAKP,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,4CACA,gBAAKD,UAAWC,EAAYC,IAjC5BR,EAAc,IACTc,EACEd,EACFe,EAEPf,GAAe,KACfA,EAAc,MACc,IAA5BF,OAAOkB,iBAEAC,EAEPjB,GAAe,KACfA,EAAc,MACc,IAA5BF,OAAOkB,iBAEAE,EACElB,GAAe,KACjBmB,EACEnB,GAAe,KACjBoB,OADF,EAe0CR,IAAI,MAAMC,QAAQ,UAC/D,UAACQ,EAAA,EAAD,CAAQf,UAAWC,EAAnB,0BAEE,SAACe,EAAA,EAAD,CAAchB,UAAWC,YAKlC,C,oCCrFD,IApBe,SAAAgB,GACb,IACEC,EAMED,EANFC,QACAC,EAKEF,EALFE,MACAnB,EAIEiB,EAJFjB,UACAoB,EAGEH,EAHFG,KACAC,EAEEJ,EAFFI,aALF,EAOIJ,EADFK,eAAAA,OANF,SASA,OACE,oBAAQJ,QAASA,EAASlB,UAAWA,EAAWoB,KAAMA,EAAtD,UACGE,GAAkBH,EAClBE,IAAgB,SAACA,EAAD,KACfC,GAAkBH,EACnBF,EAAMM,WAGZ,C","sources":["webpack://react-homework-template/./src/pages/NotFound/NotFound.module.scss?09e2","pages/NotFound/NotFound.jsx","shared/components/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bg\":\"NotFound_bg__NAfIs\",\"wrapper\":\"NotFound_wrapper__woiKt\",\"title\":\"NotFound_title__OQ-MU\",\"img\":\"NotFound_img__xbct9\",\"button\":\"NotFound_button__tmXsI\",\"btnIcon\":\"NotFound_btnIcon__cyqRq\",\"beat\":\"NotFound_beat__qZiu5\"};","import React, { useState, useEffect } from 'react';\nimport Button from '../../shared/components/Button';\nimport PawprintIcon from '../../icons/PawprintIcon';\nimport styles from './NotFound.module.scss';\n\nimport bgImgMob from '../../images/bg_320x601(543).png';\nimport bgImgTab from '../../images/bg_768x1193(1125).png';\nimport bgImgDes from '../../images/bg_1280x770(708).png';\n\nimport catMobx1 from '../../images/cat_1x_mobile.png';\nimport catMobx2 from '../../images/cat_2x_mobila.png';\nimport catTabx1 from '../../images/cat_1x_tablet.png';\nimport catTabx2 from '../../images/cat_2x_tablet.png';\nimport catDesc1 from '../../images/cat_1x_laptop.png';\nimport catDesc2 from '../../images/cat_2x_laptop.png';\n\nconst NotFoundPage = () => {\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const getImageBG = () => {\n    if (screenWidth < 768) {\n      return bgImgMob;\n    } else if (screenWidth >= 768 && screenWidth < 1280) {\n      return bgImgTab;\n    } else {\n      return bgImgDes;\n    }\n  };\n\n  // const getImage = () => {\n  //   if (screenWidth < 768 && window.devicePixelRatio === 1) {\n  //     return catMobx1;\n  //   } else if (screenWidth < 768 && window.devicePixelRatio === 2) {\n  //     return catMobx2;\n  //   } else if (\n  //     screenWidth >= 768 &&\n  //     screenWidth < 1280 &&\n  //     window.devicePixelRatio === 1\n  //   ) {\n  //     return catTabx1;\n  //   } else if (\n  //     screenWidth >= 768 &&\n  //     screenWidth < 1280 &&\n  //     window.devicePixelRatio === 2\n  //   ) {\n  //     return catTabx2;\n  //   } else if (screenWidth >= 1280 && window.devicePixelRatio === 1) {\n  //     return catDesc1;\n  //   } else if (screenWidth >= 1280 && window.devicePixelRatio === 2) {\n  //     return catDesc2;\n  //   }\n  // };\n\n  const getImage = () => {\n    if (screenWidth < 768) {\n      return catMobx1;\n    } else if (screenWidth) {\n      return catMobx2;\n    } else if (\n      screenWidth >= 768 &&\n      screenWidth < 1280 &&\n      window.devicePixelRatio === 1\n    ) {\n      return catTabx1;\n    } else if (\n      screenWidth >= 768 &&\n      screenWidth < 1280 &&\n      window.devicePixelRatio === 2\n    ) {\n      return catTabx2;\n    } else if (screenWidth >= 1280) {\n      return catDesc1;\n    } else if (screenWidth >= 1280) {\n      return catDesc2;\n    }\n  };\n\n  return (\n    <>\n      <img\n        className={styles.bg}\n        src={getImageBG()}\n        alt=\"back ground\"\n        loading=\"lazy\"\n      />\n      <div className={styles.wrapper}>\n        <h2 className={styles.title}>Ooops! This page not found :(</h2>\n        <img className={styles.img} src={getImage()} alt=\"cat\" loading=\"lazy\" />\n        <Button className={styles.button}>\n          To main page\n          <PawprintIcon className={styles.btnIcon} />\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","const Button = props => {\n  const {\n    onClick,\n    label,\n    className,\n    type,\n    SVGComponent,\n    showLabelFirst = true,\n  } = props;\n\n  return (\n    <button onClick={onClick} className={className} type={type}>\n      {showLabelFirst && label}\n      {SVGComponent && <SVGComponent />}\n      {!showLabelFirst && label}\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":["useState","window","innerWidth","screenWidth","setScreenWidth","useEffect","handleResize","addEventListener","removeEventListener","className","styles","src","bgImgMob","bgImgTab","bgImgDes","alt","loading","catMobx1","catMobx2","devicePixelRatio","catTabx1","catTabx2","catDesc1","catDesc2","Button","PawprintIcon","props","onClick","label","type","SVGComponent","showLabelFirst","children"],"sourceRoot":""}