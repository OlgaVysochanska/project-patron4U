{"version":3,"file":"static/js/267.66825966.chunk.js","mappings":"yOACA,EAA2B,wBAA3B,EAA2D,qBAA3D,EAA2F,wBAA3F,EAA+H,yB,SCQzHA,EAAUC,SAASC,cAAc,eAgCvC,MA9BA,YAA0C,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACrBC,GAAoBC,EAAAA,EAAAA,cACxB,YAAqC,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACF,WAARF,GAAoBC,IAAWC,GACjCN,GAEH,GACD,CAACA,IASH,OANAO,EAAAA,EAAAA,YAAU,WAGR,OAFAT,SAASU,iBAAiB,UAAWN,GAE9B,kBAAMJ,SAASW,oBAAoB,UAAWP,EAA9C,CACR,GAAE,CAACA,KAEGQ,EAAAA,EAAAA,eACL,gBAAKC,UAAWC,EAAiBC,QAASX,EAA1C,UACE,iBAAKS,UAAWC,EAAhB,WACE,SAACE,EAAA,EAAD,CAAQH,UAAWC,EAAiBC,QAASb,EAA7C,UACE,SAACe,EAAA,EAAD,CAAWJ,UAAWC,MAGvBX,OAGLJ,EAEH,E,oBCtCD,EAAiC,sCAAjC,EAA+E,6BAA/E,EAAmH,4BAAnH,EAAwJ,8BAAxJ,EAAgM,+BAAhM,EAA4Q,+BCiD5Q,MA3CA,YAAqC,IAAZmB,EAAW,EAAXA,QACjBC,GAAWC,EAAAA,EAAAA,QAAO,MAyBxB,OAvBAX,EAAAA,EAAAA,YAAU,WACR,IAAMY,EAAqB,SAAAC,GACrBH,EAASI,UAAYJ,EAASI,QAAQC,SAASF,EAAEf,SACnDW,GAEH,EAEKO,EAAgB,SAAAH,GACL,WAAXA,EAAEI,MACJR,GAEH,EAKD,OAHAlB,SAASU,iBAAiB,QAASW,GACnCrB,SAASU,iBAAiB,UAAWe,GAE9B,WACLzB,SAASW,oBAAoB,QAASU,GACtCrB,SAASW,oBAAoB,UAAWc,EACzC,CACF,GAAE,CAACP,KAIF,+BACE,SAAC,EAAD,CAAOS,IAAKR,EAAUjB,WAAYgB,EAAlC,UACE,iBAAKL,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,wBACA,cAAGD,UAAWC,EAAd,4CACA,gBAAKD,UAAWC,EAAhB,UACE,UAAC,IAAD,CAAQD,UAAWC,EAAeC,QAASG,EAA3C,4BACgB,SAACU,EAAA,EAAD,CAAcf,UAAWC,eAOpD,E,oBCtBD,EAnBiB,WACf,IAAMe,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3BC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,gCACGJ,IAAgB,SAAC,EAAD,CAAeX,QANhB,SAAAI,GAClBU,GAASE,EAAAA,EAAAA,IAAc,GACxB,KAKG,4JAML,C,oCCJD,IApBe,SAAAC,GACb,IACEpB,EAMEoB,EANFpB,QACAqB,EAKED,EALFC,MACAvB,EAIEsB,EAJFtB,UACAwB,EAGEF,EAHFE,KACAC,EAEEH,EAFFG,aALF,EAOIH,EADFI,eAAAA,OANF,SASA,OACE,oBAAQxB,QAASA,EAASF,UAAWA,EAAWwB,KAAMA,EAAtD,UACGE,GAAkBH,EAClBE,IAAgB,SAACA,EAAD,KACfC,GAAkBH,EACnBD,EAAMhC,WAGZ,C","sources":["webpack://react-homework-template/./src/shared/components/Modal/Modal.module.scss?3248","shared/components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ModalCongrats/ModalCongrats.module.scss?beff","components/ModalCongrats/ModalCongrats.jsx","pages/UserPage/UserPage.jsx","shared/components/Button/Button.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__KjrTQ\",\"modal\":\"Modal_modal__7Omag\",\"closeBtn\":\"Modal_closeBtn__22qk6\",\"closeIcon\":\"Modal_closeIcon__508gY\"};","import { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\n// import PropTypes from 'prop-types';\n\nimport Button from '../Button/Button';\nimport CrossIcon from 'icons/CrossIcon';\n\nimport styles from './Modal.module.scss';\n\nconst modalEl = document.querySelector('#modal-root');\n\nfunction Modal({ closeModal, children }) {\n  const closeModalOnClick = useCallback(\n    ({ key, target, currentTarget }) => {\n      if (key === 'Escape' || target === currentTarget) {\n        closeModal();\n      }\n    },\n    [closeModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', closeModalOnClick);\n\n    return () => document.removeEventListener('keydown', closeModalOnClick);\n  }, [closeModalOnClick]);\n\n  return createPortal(\n    <div className={styles.backdrop} onClick={closeModalOnClick}>\n      <div className={styles.modal}>\n        <Button className={styles.closeBtn} onClick={closeModal}>\n          <CrossIcon className={styles.closeIcon} />\n        </Button>\n\n        {children}\n      </div>\n    </div>,\n    modalEl\n  );\n}\n\nexport default Modal;\n\n// Modal.propTypes = {\n//   closeModal: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"contentWrapper\":\"ModalCongrats_contentWrapper__+TS1N\",\"title\":\"ModalCongrats_title__8Rq2u\",\"text\":\"ModalCongrats_text__TAANx\",\"button\":\"ModalCongrats_button__1MPnW\",\"btnIcon\":\"ModalCongrats_btnIcon__VPXDr\",\"beat\":\"ModalCongrats_beat__dF9-M\",\"wrapper\":\"ModalCongrats_wrapper__ghsZH\"};","import {useEffect, useRef } from 'react';\nimport Modal from 'shared/components/Modal/Modal';\nimport Button from '../../shared/components/Button';\nimport PawprintIcon from 'icons/PawprintIcon';\n\nimport styles from './ModalCongrats.module.scss';\n\nfunction ModalCongrats({ onClose }) {\n  const modalRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (modalRef.current && !modalRef.current.contains(e.target)) {\n        onClose();\n      }\n    };\n\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n\n  return (\n    <>\n      <Modal ref={modalRef} closeModal={onClose}>\n        <div className={styles.contentWrapper}>\n          <p className={styles.title}>Congrats!</p>\n          <p className={styles.text}>Youre registration is success</p>\n          <div className={styles.wrapper}>\n            <Button className={styles.button} onClick={onClose}>\n              Go to profile <PawprintIcon className={styles.btnIcon}/>\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalCongrats;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport ModalCongrats from 'components/ModalCongrats/ModalCongrats';\n\nimport { selectIsRegistered } from '../../redux/auth/authSelectors';\nimport { setRegistered } from '../../redux/auth/authSlice';\n\nconst UserPage = () => {\n  const isRegistered = useSelector(selectIsRegistered);\n \n  const dispatch = useDispatch();\n  const handleClose = e => {\n    dispatch(setRegistered(false));\n  };\n\n  return (\n    <>\n      {isRegistered && <ModalCongrats onClose={handleClose}/>}\n      <div>\n        If components are ready, add them to UserPage. /UserData, UserDataItem,\n        Logout, PetsData, PetsList, PetsItem, ModalCongrats/\n      </div>\n    </>\n  );\n};\n\nexport default UserPage;\n","const Button = props => {\n  const {\n    onClick,\n    label,\n    className,\n    type,\n    SVGComponent,\n    showLabelFirst = true,\n  } = props;\n\n  return (\n    <button onClick={onClick} className={className} type={type}>\n      {showLabelFirst && label}\n      {SVGComponent && <SVGComponent />}\n      {!showLabelFirst && label}\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":["modalEl","document","querySelector","closeModal","children","closeModalOnClick","useCallback","key","target","currentTarget","useEffect","addEventListener","removeEventListener","createPortal","className","styles","onClick","Button","CrossIcon","onClose","modalRef","useRef","handleClickOutside","e","current","contains","handleKeyDown","code","ref","PawprintIcon","isRegistered","useSelector","selectIsRegistered","dispatch","useDispatch","setRegistered","props","label","type","SVGComponent","showLabelFirst"],"sourceRoot":""}