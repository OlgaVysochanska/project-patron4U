{"version":3,"file":"static/js/830.626d14f2.chunk.js","mappings":"kNAwBA,MApBA,SAAoBA,GAClB,OACE,gCACEC,MAAO,GACPC,OAAQ,GACRC,KAAK,OACLC,MAAM,8BACFJ,GALN,cAOE,iBACEK,EAAE,mEAEFC,YAAa,IACbC,cAAc,QACdC,eAAe,YAItB,E,oBCrBD,EAAyB,uBCKnBC,EAAkB,WACtB,OAAO,SAAC,EAAD,CAAYR,MAAM,KAAKC,OAAO,KAAKQ,QAAQ,aACnD,EAqBD,EAnBe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACC,EAAA,EAAD,CACEC,QANa,WACfH,GAASI,EAAAA,EAAAA,MACV,EAKGC,KAAK,SACLC,UAAWC,EACXC,MAAM,UACNC,aAAcX,EACdY,gBAAgB,GAGrB,C,sGC1BD,EAAyB,yBAAzB,EAA0D,wBAA1D,EAA8F,4BAA9F,EAAiI,uB,8qBCqEjI,EAvDiB,WACf,OAAsCC,EAAAA,EAAAA,UAASC,OAAOC,YAAtD,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAASC,EAAAA,EAAAA,KAATD,KACAE,GAAUC,EAAAA,EAAAA,KAAVD,MAEFE,EAAQC,EAAAA,EAAaL,IAE3BM,EAAAA,EAAAA,YAAU,WACR,SAASC,IACPR,EAAeH,OAAOC,WACvB,CAED,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,WACLX,OAAOa,oBAAoB,SAAUF,EACtC,CACF,GAAE,IAEH,IAwBMG,EACM,UAAVR,EAAoBS,EAApB,UAAoCA,EAApC,cAAoDA,GACtD,OACE,iCACE,SAACC,EAAA,EAAD,KACA,iBAAKtB,UAAWqB,EAAhB,WACE,SAACE,EAAA,EAAD,KACA,gBAAKvB,UAAWqB,EAAWG,IA9B3BhB,EAAc,KAAmC,IAA5BF,OAAOmB,iBACvBC,EACElB,EAAc,KAAmC,IAA5BF,OAAOmB,iBAC9BE,EAEPnB,GAAe,KACfA,EAAc,MACc,IAA5BF,OAAOmB,iBAEAG,EAEPpB,GAAe,KACfA,EAAc,MACc,IAA5BF,OAAOmB,iBAEAI,EAC8B,IAA5BvB,OAAOmB,iBACTK,EAC8B,IAA5BxB,OAAOmB,iBACTM,OADF,EAYyCC,IAAI,OAAOC,QAAQ,UAC/D,eAAIjC,UAAWoB,EAAf,SAA4BN,SAInC,C,+ECnED,EAAqB,uB,uCCyCrB,EAnCmB,WACjB,OAAsCT,EAAAA,EAAAA,UAASC,OAAOC,YAAtD,eAAOC,EAAP,KAAoBC,EAApB,MAEAO,EAAAA,EAAAA,YAAU,WACR,SAASC,IACPR,EAAeH,OAAOC,WACvB,CAED,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,WACLX,OAAOa,oBAAoB,SAAUF,EACtC,CACF,GAAE,IAYH,OACE,+BACE,gBACEjB,UAAWqB,EACXG,IAbAhB,EAAc,IACT0B,EACE1B,GAAe,KAAOA,EAAc,KACtC2B,EAEAC,EASLJ,IAAI,cACJC,QAAQ,UAIf,C,8CCVD,IA9Be,SAAAlD,GACb,IACEc,EAQEd,EARFc,QACAK,EAOEnB,EAPFmB,MACAF,EAMEjB,EANFiB,UACAD,EAKEhB,EALFgB,KACAI,EAIEpB,EAJFoB,aALF,EASIpB,EAHFqB,eAAAA,OANF,SAOEiC,EAEEtD,EAFFsD,YAPF,EASItD,EADFuD,SAAAA,OARF,SAUMC,GAAY,UACbF,GAEL,OACE,oBACExC,QAASA,EACTG,UAAWA,EACXD,KAAMA,EACNyC,MAAOD,EACPD,SAAUA,EALZ,UAOGlC,GAAkBF,EAClBC,IAAgB,SAACA,EAAD,KACfC,GAAkBF,EACnBnB,EAAM0D,WAGZ,C","sources":["icons/LogoutIcon.jsx","webpack://react-homework-template/./src/components/User/Logout/Logout.module.scss?80c5","components/User/Logout/Logout.jsx","webpack://react-homework-template/./src/pages/MainPage/MainPage.module.scss?b09f","pages/MainPage/MainPage.jsx","webpack://react-homework-template/./src/shared/components/Background/Background.module.scss?11f9","shared/components/Background/Background.jsx","shared/components/Button/Button.jsx"],"sourcesContent":["import * as React from 'react';\n\n// color = stroke\n\nfunction LogoutIcon(props) {\n  return (\n    <svg\n      width={24}\n      height={24}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M14 4h4a2 2 0 012 2v12a2 2 0 01-2 2h-4M3 12h12M3 12l4-4m-4 4l4 4\"\n        // stroke=\"#54ADFF\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport default LogoutIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnLog\":\"Logout_btnLog__8HnIP\"};","import Button from 'shared/components/Button/Button';\nimport LogoutIcon from 'icons/LogoutIcon';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../../redux/auth/authOperations';\nimport styles from './Logout.module.scss';\n\nconst LogoutIconTuned = () => {\n  return <LogoutIcon width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" />;\n};\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n\n  const onLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Button\n      onClick={onLogout}\n      type=\"button\"\n      className={styles.btnLog}\n      label=\"Log Out\"\n      SVGComponent={LogoutIconTuned}\n      showLabelFirst={false}\n    />\n  );\n};\n\nexport default Logout;\n","// extracted by mini-css-extract-plugin\nexport default {\"screen\":\"MainPage_screen__G5c8J\",\"title\":\"MainPage_title__nglhh\",\"titleDark\":\"MainPage_titleDark__5fva2\",\"pets\":\"MainPage_pets__+VBkO\"};","import React, { useState, useEffect } from 'react';\nimport Background from '../../shared/components/Background/Background';\nimport scss from './MainPage.module.scss';\nimport Logout from 'components/User/Logout';\nimport useLang from 'shared/hooks/useLang';\nimport useTheme from 'shared/hooks/useTheme';\nimport locale from './locale.json';\n\nimport petsMob1x from '../../images/pets_mob_1x.png';\nimport petsMob2x from '../../images/pets_mob_2x.png';\nimport petsTab1x from '../../images/pets_tab_1x.png';\nimport petsTab2x from '../../images/pets_tab_2x.png';\nimport petsDes1x from '../../images/pets_des_1x.png';\nimport petsDes2x from '../../images/pets_des_2x.png';\n\nconst MainPage = () => {\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const { lang } = useLang();\n  const { theme } = useTheme();\n\n  const title = locale.title[lang];\n\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const getImage = () => {\n    if (screenWidth < 768 && window.devicePixelRatio === 1) {\n      return petsMob1x;\n    } else if (screenWidth < 768 && window.devicePixelRatio === 2) {\n      return petsMob2x;\n    } else if (\n      screenWidth >= 768 &&\n      screenWidth < 1200 &&\n      window.devicePixelRatio === 1\n    ) {\n      return petsTab1x;\n    } else if (\n      screenWidth >= 768 &&\n      screenWidth < 1200 &&\n      window.devicePixelRatio === 2\n    ) {\n      return petsTab2x;\n    } else if (window.devicePixelRatio === 1) {\n      return petsDes1x;\n    } else if (window.devicePixelRatio === 2) {\n      return petsDes2x;\n    }\n  };\n\n  const titleStyle =\n    theme === 'light' ? scss.title : `${scss.title} + ${scss.titleDark}`;\n  return (\n    <>\n      <Background />\n      <div className={scss.screen}>\n        <Logout />\n        <img className={scss.pets} src={getImage()} alt=\"pets\" loading=\"lazy\" />\n        <h1 className={titleStyle}>{title}</h1>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"bg\":\"Background_bg__5OCUB\"};","import React, { useState, useEffect } from 'react';\nimport scss from './Background.module.scss';\n\nimport bgImgMob from '../../../images/bg_320x601(543).png';\nimport bgImgTab from '../../../images/bg_768x1193(1125).png';\nimport bgImgDes from '../../../images/bg_1280x770(708).png';\n\nconst Background = () => {\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const getImageBG = () => {\n    if (screenWidth < 768) {\n      return bgImgMob;\n    } else if (screenWidth >= 768 && screenWidth < 1280) {\n      return bgImgTab;\n    } else {\n      return bgImgDes;\n    }\n  };\n\n  return (\n    <>\n      <img\n        className={scss.bg}\n        src={getImageBG()}\n        alt=\"back ground\"\n        loading=\"lazy\"\n      />\n    </>\n  );\n};\n\nexport default Background;\n","const Button = props => {\n  const {\n    onClick,\n    label,\n    className,\n    type,\n    SVGComponent,\n    showLabelFirst = true,\n    buttonStyle,\n    disabled = false,\n  } = props;\n  const buttonStyles = {\n    ...buttonStyle,\n  };\n  return (\n    <button\n      onClick={onClick}\n      className={className}\n      type={type}\n      style={buttonStyles}\n      disabled={disabled}\n    >\n      {showLabelFirst && label}\n      {SVGComponent && <SVGComponent />}\n      {!showLabelFirst && label}\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":["props","width","height","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","LogoutIconTuned","viewBox","dispatch","useDispatch","Button","onClick","logout","type","className","styles","label","SVGComponent","showLabelFirst","useState","window","innerWidth","screenWidth","setScreenWidth","lang","useLang","theme","useTheme","title","locale","useEffect","handleResize","addEventListener","removeEventListener","titleStyle","scss","Background","Logout","src","devicePixelRatio","petsMob1x","petsMob2x","petsTab1x","petsTab2x","petsDes1x","petsDes2x","alt","loading","bgImgMob","bgImgTab","bgImgDes","buttonStyle","disabled","buttonStyles","style","children"],"sourceRoot":""}